//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TileMapManager.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TileMapManager.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 系    统：ArcGIS地图裁剪工具
        ///作    者：徐  旺
        ///单    位：中国地质大学（武汉） 信息工程学院 114091班 
        ///指导老师：扈  震  （数字市政实验室）
        ///系统说明：基于ArcEngine,实现对ArcGIS的矢量地图mxd格式文档地图进行裁剪。包括紧凑型和松散型两种格式。
        ///同时支持全局切片和局部切片。方便用户进行局部更改后进行切片生产。
        ///系统功能：
        ///1.地图文档操作：打开，新建，保存，另存。
        ///2.地图图层操作：添加，新建，删除。
        ///3.矢量数据编辑：基本的矢量地图编辑功能。
        ///4.瓦片裁剪：全局瓦片裁剪，拉框方式瓦片裁剪，输入方式瓦片裁剪
        ///5.瓦片浏览：读取瓦片缓存，放大，缩小，复位，移动，刷新
        ///6.其它操作：矢量编辑还有长度测量，面积测量，信息识别等功能；瓦片模块长度测量，面积测量。
        ///系统特色：
        ///1.系统界面美观。使用Devexpress界面插件制作，风格多样，界面美观。
        ///2.功能强大实用。针对ArcGIS两种离线缓存数据，Compacted和Exploded两种数据的读取和存储。实现地图的全
        ///局裁剪和局部修改后的裁减，大大提升裁剪效率。其中，局部裁剪中，自动 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string about_sys {
            get {
                return ResourceManager.GetString("about_sys", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap AboutAuthor {
            get {
                object obj = ResourceManager.GetObject("AboutAuthor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AboutSys {
            get {
                object obj = ResourceManager.GetObject("AboutSys", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;EnvelopeN xsi:type=&apos;typens:EnvelopeN&apos; xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xs=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:typens=&apos;http://www.esri.com/schemas/ArcGIS/10.0&apos;&gt;&lt;XMin&gt;113.92325295170903&lt;/XMin&gt;&lt;YMin&gt;207.63218065698339&lt;/YMin&gt;&lt;XMax&gt;1901.120004993872&lt;/XMax&gt;&lt;YMax&gt;1754.1639693521283&lt;/YMax&gt;&lt;SpatialReference xsi:type=&apos;typens:ProjectedCoordinateSystem&apos;&gt;&lt;WKT&gt;PROJCS[&amp;quot;WGS_1984_World_Mercator&amp;quot;,GEOGCS[&amp;quot;GCS_WGS_1984&amp;quot;,DATUM[&amp;quot;D_WG [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string confCdi {
            get {
                return ResourceManager.GetString("confCdi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;CacheInfo xsi:type=&apos;typens:CacheInfo&apos; xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xs=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:typens=&apos;http://www.esri.com/schemas/ArcGIS/10.0&apos;&gt;&lt;TileCacheInfo xsi:type=&apos;typens:TileCacheInfo&apos;&gt;&lt;SpatialReference xsi:type=&apos;typens:ProjectedCoordinateSystem&apos;&gt;&lt;WKT&gt;PROJCS[&amp;quot;WGS_1984_World_Mercator&amp;quot;,GEOGCS[&amp;quot;GCS_WGS_1984&amp;quot;,DATUM[&amp;quot;D_WGS_1984&amp;quot;,SPHEROID[&amp;quot;WGS_1984&amp;quot;,6378137.0,298.257223563]],PRIMEM[ [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string confXml {
            get {
                return ResourceManager.GetString("confXml", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap GetPloyLenghth {
            get {
                object obj = ResourceManager.GetObject("GetPloyLenghth", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap GetPolyArea {
            get {
                object obj = ResourceManager.GetObject("GetPolyArea", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LoadBackImg {
            get {
                object obj = ResourceManager.GetObject("LoadBackImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MenuHander {
            get {
                object obj = ResourceManager.GetObject("MenuHander", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MenuRefresh {
            get {
                object obj = ResourceManager.GetObject("MenuRefresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MenuRestore {
            get {
                object obj = ResourceManager.GetObject("MenuRestore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MenuZoomIn {
            get {
                object obj = ResourceManager.GetObject("MenuZoomIn", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MenuZoomOut {
            get {
                object obj = ResourceManager.GetObject("MenuZoomOut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap nonImg {
            get {
                object obj = ResourceManager.GetObject("nonImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon ZoomIn {
            get {
                object obj = ResourceManager.GetObject("ZoomIn", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon ZoomOut {
            get {
                object obj = ResourceManager.GetObject("ZoomOut", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
